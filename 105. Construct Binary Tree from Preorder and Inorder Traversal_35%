/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return buildTree(preorder, 0, preorder.length-1, inorder, 0, inorder.length-1);
    }
    public TreeNode buildTree(int[] preorder, int l1, int r1, int[] inorder, int l2, int r2){
        if(l1>r1||l2>r2)return null;
        TreeNode root = new TreeNode(preorder[l1]);
        int pos = l2;
        while(pos<=r2&&inorder[pos]!=preorder[l1]) pos++;
        int left_size=pos-l2;
        int right_size=r2-pos;
        root.left=buildTree(preorder, l1+1, l1+left_size, inorder, l2, l2+left_size-1);
        root.right=buildTree(preorder, l1+left_size+1, r1, inorder, pos+1, r2);
        return root;
    }
}
