class NumArray {
    class segmentTreeNode{
        int sum;
        segmentTreeNode left, right;
        int start, end;
        public segmentTreeNode(int start, int end){
            this.start=start;
            this.end=end;
            sum=0;
            left=null;
            right=null;
        }
    }
    private segmentTreeNode buildSegmentTree(int[] nums, int start, int end){
        if(start>end){
            return null;
        }else{
            segmentTreeNode node = new segmentTreeNode(start, end);
            if(start==end){
                node.sum=nums[start];
            }else{
                int mid=start+(end-start)/2;
                node.left=buildSegmentTree(nums, start, mid);
                node.right=buildSegmentTree(nums, mid+1, end);
                node.sum=node.left.sum+node.right.sum;
            }
            return node;
        }
    }
    private void updateSegmentTree(int i, int val, segmentTreeNode root){
        if(root==null)return;
        if(root.start==root.end){
            root.sum=val;
        }else{
            int mid= root.start+(root.end-root.start)/2;
            if(i<=mid){
                updateSegmentTree(i, val, root.left);
            }else{
                updateSegmentTree(i, val, root.right);
            }
            root.sum=root.left.sum+root.right.sum;
        }
    }
    private int sumRange(int i, int j, segmentTreeNode root){
        if(root.start==i&&root.end==j){
            return root.sum;
        }else{
            int mid=root.start+(root.end-root.start)/2;
            if(j<=mid){
                return sumRange(i,j, root.left);
            }else if(i>mid){
                return sumRange(i,j,root.right);
            }else{
                return sumRange(i,mid,root.left)+sumRange(mid+1, j, root.right);
            }
        }
    }
    
    segmentTreeNode root;
    
    public NumArray(int[] nums) {
        this.root=buildSegmentTree(nums, 0, nums.length-1);
    }
    
    public void update(int i, int val) {
        updateSegmentTree(i, val, this.root);
    }
    
    public int sumRange(int i, int j) {
        return sumRange(i,j,this.root);
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.update(i,val);
 * int param_2 = obj.sumRange(i,j);
 */
