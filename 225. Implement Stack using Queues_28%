class MyStack {
    Queue<Integer> q;
    /** Initialize your data structure here. */
    public MyStack() {
        q=new LinkedList<Integer>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
        q.offer(x);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
        Queue<Integer> temp = new LinkedList<Integer>();
        while(q.size()>1){
            temp.offer(q.poll());
        }
        int res=q.poll();
        q=temp;
        return res;
    }
    
    /** Get the top element. */
    public int top() {
        Queue<Integer> temp = new LinkedList<Integer>(q);
        int m=q.size();
        while(m>1){
            q.poll();
            m--;
        }
        int res=q.poll();
        q=temp;
        return res;
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
        return q.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
