/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return buildTree(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1);
    }
    public TreeNode buildTree(int[] inorder, int l1, int r1, int[] postorder, int l2, int r2){
        if(l1>r1||l2>r2)return null;
        TreeNode root=new TreeNode(postorder[r2]);
        int pos=l1;
        while(pos<=r1&&inorder[pos]!=postorder[r2])pos++;
        int left_size=pos-l1;
        int right_size=r1-pos;
        root.left=buildTree(inorder, l1, pos-1, postorder, l2, l2+left_size-1);
        root.right=buildTree(inorder, pos+1, r1, postorder, l2+left_size, r2-1);
        return root;
    }
}
