class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        if(len==0) return 0;
        int[] dp1= new int[len];
        int[] dp2= new int[len];
        int lowestPrice=prices[0];
        for(int i=1; i<len; i++){
            dp1[i]=Math.max(prices[i]-lowestPrice, dp1[i-1]);
            if(prices[i]<lowestPrice)lowestPrice=prices[i];
        }
        int highestPrice=prices[len-1];
        for(int i=len-2; i>=0; i--){
            dp2[i]=Math.max(highestPrice-prices[i], dp2[i+1]);
            if(prices[i]>highestPrice)highestPrice=prices[i];
        }
        int max=0;
        for(int i=0; i<len; i++){
            max=Math.max(max, dp1[i]+dp2[i]);
        }
        return max;
    }
}
