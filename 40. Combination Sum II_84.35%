class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        Arrays.sort(candidates);
        combinationSum2Helper(candidates, target, 0, new ArrayList<Integer>(), res);
        return res;
    }
    public void combinationSum2Helper(int[] candidates, int target, int j, List<Integer> sum, List<List<Integer>> res){
        if(target==0){
            List<Integer> list = new ArrayList<Integer>(sum);
            res.add(list);
        }else{
            for(int i=j; i<candidates.length; i++){
                if(i>j&&candidates[i]==candidates[i-1])continue;
                if(candidates[i]>target)break;
                sum.add(candidates[i]);
                combinationSum2Helper(candidates, target-candidates[i], i+1, sum, res);
                sum.remove(sum.size()-1);
            }
        }
    }
}
